https://github.com/irmen/Pyro4/commit/584c92df722a705915cfaffa42fbd248a6cf1063

--- src/Pyro4/core.py
+++ src/Pyro4/core.py
@@ -176,7 +176,7 @@
     .. automethod:: _pyroBatch
     .. automethod:: _pyroAsync
     """
-    __pyroAttributes=frozenset(["__getnewargs__", "__getinitargs__", "_pyroConnection", "_pyroUri", "_pyroOneway", "_pyroTimeout", "_pyroSeq"])
+    __pyroAttributes = frozenset(["__getnewargs__", "__getnewargs_ex__", "__getinitargs__", "_pyroConnection", "_pyroUri", "_pyroOneway", "_pyroTimeout", "_pyroSeq"])
 
     def __init__(self, uri):
         """
@@ -373,10 +373,9 @@
                     if msg.type==Pyro4.message.MSG_CONNECTFAIL:
                         error="connection rejected"
                         if msg.data:
-                            data = msg.data
-                            if sys.version_info>=(3, 0):
-                                data=str(msg.data, "utf-8")
-                            error+=", reason: " + data
+                            serializer = util.get_serializer_by_id(msg.serializer_id)
+                            data = serializer.deserializeData(msg.data, compressed=msg.flags & Pyro4.message.FLAGS_COMPRESSED)
+                            error += ", reason: " + data
                         conn.close()
                         log.error(error)
                         raise errors.CommunicationError(error)
--- src/Pyro4/utils/flame.py
+++ src/Pyro4/utils/flame.py
@@ -67,7 +67,7 @@
         self.module = module
 
     def __getattr__(self, item):
-        if item in ("__getnewargs__", "__getinitargs__"):
+        if item in ("__getnewargs__", "__getnewargs_ex__", "__getinitargs__"):
             raise AttributeError(item)
         return Pyro4.core._RemoteMethod(self.__invoke, "%s.%s" % (self.module, item))
 
