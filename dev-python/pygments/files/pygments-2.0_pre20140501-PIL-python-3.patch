https://bitbucket.org/birkenfeld/pygments-main/issue/908

--- tests/test_basic_api.py
+++ tests/test_basic_api.py
@@ -16,7 +16,7 @@
 from pygments.token import _TokenType, Text
 from pygments.lexer import RegexLexer
 from pygments.formatters.img import FontNotFound
-from pygments.util import text_type, StringIO, xrange, ClassNotFound
+from pygments.util import text_type, BytesIO, StringIO, xrange, ClassNotFound
 
 import support
 
@@ -148,7 +148,8 @@
 
 def test_formatter_public_api():
     ts = list(lexers.PythonLexer().get_tokens("def f(): pass"))
-    out = StringIO()
+    binary_out = BytesIO()
+    string_out = StringIO()
     # test that every formatter class has the correct public API
     def verify(formatter, info):
         assert len(info) == 4
@@ -156,9 +157,10 @@
         assert info[1], "missing formatter aliases"
         assert info[3], "missing formatter docstring"
 
-        if formatter.name == 'Raw tokens':
-            # will not work with Unicode output file
-            return
+        if formatter.name.startswith('img') or formatter.name == 'Raw tokens':
+            out = binary_out
+        else:
+            out = string_out
 
         try:
             inst = formatter(opt1="val1")
@@ -208,9 +210,10 @@
             return
 
         if formatter.name != 'Raw tokens':
-            out = format(tokens, inst)
-            if formatter.unicodeoutput:
-                assert type(out) is text_type
+            if not formatter.name.startswith('img'):
+                out = format(tokens, inst)
+                if formatter.unicodeoutput:
+                    assert type(out) is text_type
 
             inst = formatter(encoding='utf-8')
             out = format(tokens, inst)
